name: Build & Release Lambda Layers

on:
  push:
    # Uncomment the next lines to restrict to main only
    # branches:
    #   - main
    paths:
      - 'layer/trading-layer/**'                   # trading dependencies changes
      - 'layer/data-layer/**'                      # data dependencies changes
      - '.github/workflows/build-layers.yml'       # workflow file updates
  workflow_dispatch:                              # manual trigger allowed

jobs:
  trading-layer:
    name: Build & Publish Trading Layer
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip, setuptools & wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install Alpaca REST client without streaming deps
        run: |
          # Install only the Alpaca REST client, skipping its streaming deps
          pip install --no-deps \
            --target layer/trading-layer/python/lib/python3.11/site-packages \
            alpaca-trade-api==3.2.0

          # Install minimal supporting libs with compatible wheels
          pip install --no-cache-dir \
            --target layer/trading-layer/python/lib/python3.11/site-packages \
            aiohttp==3.11.17 msgpack==1.0.3 requests==2.32.3 urllib3==1.26.20

      - name: Zip trading layer directory
        run: |
          cd layer/trading-layer
          zip -r ../../trading-layer.zip python

      - name: Publish Trading Layer to AWS Lambda
        id: publish-trading
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          TRADING_ARN=$(aws lambda publish-layer-version \
            --layer-name trading-layer \
            --description "Trading API dependencies" \
            --zip-file fileb://trading-layer.zip \
            --compatible-runtimes python3.11 \
            --query 'LayerVersionArn' \
            --output text)
          echo "arn=$TRADING_ARN" >> $GITHUB_OUTPUT

      - name: Upload trading layer artifact
        uses: actions/upload-artifact@v4
        with:
          name: trading-layer
          path: trading-layer.zip

  data-layer:
    name: Build & Publish Data Layer
    runs-on: ubuntu-latest
    needs: trading-layer

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Upgrade pip, setuptools & wheel
        run: |
          python -m pip install --upgrade pip setuptools wheel

      - name: Install data dependencies into layer
        run: |
          pip install --no-cache-dir \
            --only-binary=:all: \
            --target layer/data-layer/python/lib/python3.11/site-packages \
            -r layer/data-layer/requirements.txt

      - name: Zip data layer directory
        run: |
          cd layer/data-layer
          zip -r ../../data-layer.zip python

      - name: Publish Data Layer to AWS Lambda
        id: publish-data
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          DATA_ARN=$(aws lambda publish-layer-version \
            --layer-name data-layer \
            --description "Market data dependencies" \
            --zip-file fileb://data-layer.zip \
            --compatible-runtimes python3.11 \
            --query 'LayerVersionArn' \
            --output text)
          echo "arn=$DATA_ARN" >> $GITHUB_OUTPUT

      - name: Upload data layer artifact
        uses: actions/upload-artifact@v4
        with:
          name: data-layer
          path: data-layer.zip

  attach-layers:
    name: Attach Layers to Lambda Function
    runs-on: ubuntu-latest
    needs: [trading-layer, data-layer]

    steps:
      - name: Update function configuration
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws lambda update-function-configuration \
            --function-name MyFunction \
            --layers \
              ${{ needs.trading-layer.outputs.arn }} \
              ${{ needs.data-layer.outputs.arn }}
